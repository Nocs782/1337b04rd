version: '3.8'

services:

  app:
    build: . 
    ports:
      - "8080:8080"  
    depends_on:
      - db
      - minio
    environment:
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
    restart: always

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Admin console
    volumes:
      - minio-data:/data
    restart: always

  mc:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
          echo 'Waiting for MinIO to start...' &&
          sleep 20 &&
          mc alias set myminio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY} &&
          mc mb --ignore-existing myminio/${S3_BUCKET} &&
          mc anonymous set public myminio/${S3_BUCKET} &&
          echo 'Bucket ready and public (uploads + downloads allowed).' &&
          tail -f /dev/null
      "
    environment:
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}

volumes:
  postgres-data:
  minio-data:
